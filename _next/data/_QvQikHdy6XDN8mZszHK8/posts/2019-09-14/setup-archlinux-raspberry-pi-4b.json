{"pageProps":{"mdMeta":{"realpath":"/home/runner/work/jokester.github.io/jokester.github.io/posts/2019/2019-09-14-setup-archlinux-raspberry-pi-4b.md","slug":["2019-09-14","setup-archlinux-raspberry-pi-4b"],"frontMatter":{"title":"Setup Archlinux on Raspberry Pi 4b","publishAt":"2019-09-14"}},"mdContent":"\nI bought a raspberry 4b (4g mem) to use as a low-power home server and emulator console ([libretro](https://www.archlinux.org/groups/x86_64/libretro/)). By far I'm satisfied.\n\nThis is a memo about my settings and tunings.\n\n* toc\n{:toc}\n\n## Prepare SD card\n\nI started from [the build at ArchLinuxARM](https://archlinuxarm.org/about/downloads) but used a btrfs root instead of ext4.\n\nThe [original instructions used ext4](https://archlinuxarm.org/platforms/armv8/broadcom/raspberry-pi-4)\nshould definitely work. It's just I prefer to use a btrfs subvolume as root for a few reasons:\n\n- transparent compression (makes the SD card less of a bottleneck)\n- subvolume snapshots (enables convenient transfer with `btrfs send/receive`, and backup like [btrbk](https://github.com/digint/btrbk))\n\nThe following snippet assumes SD card is at `/dev/sdX`. You need to use actual path in commands.\n\n### Partition the card\n\nWith `fdisk` or other tools you like:\n\n- Create `sdX1`, a 100MB FAT partition, and set partition type to `W95 FAT32 (LBA)`. This becomes `/boot`.\n- Create `sdX2` with rest of the disk, and set partition type to `Linux`. This becomes parent of other subvolumes including `/` (detailed later).\n- If swap space is required (think twice, it's SD card after all), shrink `sdX2` and create a swap partition now, because swap file is not supported in btrfs.\n\nRefer to original instructions if you are uncertain about `fdisk` commands.\n\n### mkfs and extract image\n\n```\n# cd /media\n\n# mkfs.vfat  /dev/sdX1\n\n# mkfs.btrfs /dev/sdX2\n\n# mkdir -pv sdcard\n\n# mount /dev/sdX2 sdcard -o ssd,discard,compress=lzo\n\n# btrfs subvolume create sdcard/root-current         # This subvolume becomes / at run time. It can be snapshot-ed separately.\n\n# mkdir sdcard/root-current/boot\n\n# mount /dev/sdX1 sdcard/root-current/boot\n\n# bsdtar -xpf ArchLinuxARM-rpi-4-latest.tar.gz -C sdcard/root-current\n```\n\n### configure mounts\n\nEdit `sdcard/root-current/boot/cmdline.txt`, add `rootflags` part to mount the subvolume at `/`:\n\n```diff\n-root=/dev/mmcblk0p2 rw rootwait console=ttyAMA0,115200 ...\n+root=/dev/mmcblk0p2 rootflags=subvol=/root-current rw rootwait console=ttyAMA0,115200 ...\n```\n\nEdit `sdcard/root-current/etc/fstab`, add our mount options (it boots without these lines, but new created files won't get compressed):\n\n```diff\n+/dev/mmcblk0p2  /              btrfs   defaults,compress=lzo,subvol=/root-current       0       0\n+/dev/mmcblk0p2  /media/sdcard  btrfs   defaults,compress=lzo,subvol=/,noauto            0       0\n```\n\nThe `/media/sdcard` mount is not necessary for everyday use. It can be used to manage subvolumes / snapshots.\n\n## Customization and hardening\n\nAfter successfully booting from SD card:\n\n- Modify `/etc/locale.gen` and re-run `locale-gen` (It's strange that the `locale.gen` does not come with any locale.)\n- Recommended: harden sshd and other security config\n\n## Tuneables to minimize SD card IO\n\nAfter the following attempts, I'm already OK with the performance. Stopping here until I need to squeeze more out of it.\n\n### Mount options\n\n- vfat partition: `noatime,nodiratime`\n- btrfs partition: `noatime,nodiratime,compress=lzo,ssd,discard`\n\n### Stop journald from persisting logs\n\n```diff\n# /etc/systemd/journald.conf\n [Journal]\n-Storage=auto\n+Storage=volatile\n```\n\n## Mount remote disk via iSCSI\n\nThis is my first journey about iSCSI but it's smoother than I thought.\n\n### Server aka \"iSCSI target\"\n\n[My NAS](/post/2017-09/freebsd-on-microserver/) runs FreeBSD so I just followed the [29.12.1. Configuring an iSCSI Target](https://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/network-iscsi.html).\n\n### Client aka \"iSCSI Initiator\"\n\nsee [archwiki](https://wiki.archlinux.org/index.php/Open-iSCSI)\n\n## Gaming stuff: libretro and joystick\n\nTODO\n\n## Watchlist\n\n### ARMv8 build\n\nThe CPU is ARMv8-capable but I don't see any ARMv8 builds published. Guess I have to check the following links later:\n\n- [Stable 64 bit (arm v8) Raspbian buster on pi 4?](https://www.raspberrypi.org/forums/viewtopic.php?t=245658) @ raspberrypi.org\n- [what about PI 4](https://archlinuxarm.org/forum/viewtopic.php?f=8&t=13734&start=50) @ archlinuxarm.org\n- [Upstream initial Raspberry Pi 4 B support](https://github.com/lategoodbye/rpi-zero/issues/43) @ github\n"},"__N_SSG":true}