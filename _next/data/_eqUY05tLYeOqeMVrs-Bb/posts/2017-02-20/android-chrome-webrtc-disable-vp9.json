{"pageProps":{"mdMeta":{"realpath":"/home/runner/work/jokester.github.io/jokester.github.io/posts/2017/2017-02-20-android-chrome-webrtc-disable-vp9.md","slug":["2017-02-20","android-chrome-webrtc-disable-vp9"],"frontMatter":{"title":"Disabling VP9 in Android Chrome's WebRTC","publishAt":"2017-02-20"}},"mdContent":"\n- toc\n  {:toc}\n\nNOTE: due to complexity and opaqueness (to a JavaScript developer) of WebRTC technologies, this may not be a complete solution.\nYou are advised to test and benchmark thorough before using this hack in real product.\n\n### Problem: encoding with VP9 can cause high CPU load in an old tablet\n\nThe problem happened with a Lenovo YOGA tablet and its ARMv7 MSM8909 processor.\n\nWhen a video is being send to the other browse, the FPS of all videos falls to less than 1.\n\nWe finally located the direct cause of CPU load: encoding video stream in VP9 took `400 ~ 600ms` per frame (the avarage encode time can be found in `chrome://webrtc-internals`).\n\n### Fix: force Chrome to use VP8\n\nLocal offer SDP lists video formats that can be used in RTCPeerConnection.\nIf we remove VP9 from SDP before passing it to `peerConn.setLocalDescription()`, Chrome will use other codecs instead.\n\nI am attaching an example SDP got from [WebRTC samples Munge SDP](https://webrtc.github.io/samples/src/content/peerconnection/munge-sdp/).\nChanges are listed in `diff` format. Lines started with `!` are comments and not part of SDP.\n\n```diff\n--- original SDP got from peerConn.createOffer()\n+++ new SDP to use in peerConn.setLocalDescription()\n v=0\n o=- 1663534131550752306 2 IN IP4 127.0.0.1\n s=-\n t=0 0\n a=group:BUNDLE audio video data\n a=msid-semantic: WMS NFf4pxQvqNFomEdHC0fI1kwlxx5O9NbeAUUs\n m=audio 9 UDP/TLS/RTP/SAVPF 111 103 104 9 0 8 106 105 13 126\n c=IN IP4 0.0.0.0\n a=rtcp:9 IN IP4 0.0.0.0\n a=ice-ufrag:VoeE\n a=ice-pwd:ZMrKM1piGvOdgZxVOOLlMOMq\n a=fingerprint:sha-256 00:3A:44:D4:B6:9D:8D:88:87:84:F8:18:29:8F:64:E8:AE:59:3E:D6:33:6C:74:88:4D:F8:88:1C:0E:C6:48:F9\n a=setup:actpass\n a=mid:audio\n a=extmap:1 urn:ietf:params:rtp-hdrext:ssrc-audio-level\n a=sendrecv\n a=rtcp-mux\n a=rtpmap:111 opus/48000/2\n a=rtcp-fb:111 transport-cc\n a=fmtp:111 minptime=10;useinbandfec=1\n a=rtpmap:103 ISAC/16000\n a=rtpmap:104 ISAC/32000\n a=rtpmap:9 G722/8000\n a=rtpmap:0 PCMU/8000\n a=rtpmap:8 PCMA/8000\n a=rtpmap:106 CN/32000\n a=rtpmap:105 CN/16000\n a=rtpmap:13 CN/8000\n a=rtpmap:126 telephone-event/8000\n a=ssrc:795782633 cname:/nX1r0P1oSOr0ktw\n a=ssrc:795782633 msid:NFf4pxQvqNFomEdHC0fI1kwlxx5O9NbeAUUs 44267d8c-e64a-4c3c-b40f-975dfa4a5ea4\n a=ssrc:795782633 mslabel:NFf4pxQvqNFomEdHC0fI1kwlxx5O9NbeAUUs\n a=ssrc:795782633 label:44267d8c-e64a-4c3c-b40f-975dfa4a5ea4\n! \"m=\" denotes \"Media Descriptions\".\n! The numbers 100 101 ... are \"payload type number\" that are used to index payload.\n! We are removing 101, the payload type number of VP9 here\n-m=video 9 UDP/TLS/RTP/SAVPF 100 101 107 116 117 96 97 99 98\n+m=video 9 UDP/TLS/RTP/SAVPF 100 107 116 117 96 97 99 98\n c=IN IP4 0.0.0.0\n a=rtcp:9 IN IP4 0.0.0.0\n a=ice-ufrag:VoeE\n a=ice-pwd:ZMrKM1piGvOdgZxVOOLlMOMq\n a=fingerprint:sha-256 00:3A:44:D4:B6:9D:8D:88:87:84:F8:18:29:8F:64:E8:AE:59:3E:D6:33:6C:74:88:4D:F8:88:1C:0E:C6:48:F9\n a=setup:actpass\n a=mid:video\n a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n a=extmap:3 http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\n a=extmap:4 urn:3gpp:video-orientation\n a=extmap:5 http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\n a=extmap:6 http://www.webrtc.org/experiments/rtp-hdrext/playout-delay\n a=sendrecv\n a=rtcp-mux\n a=rtcp-rsize\n a=rtpmap:100 VP8/90000\n a=rtcp-fb:100 ccm fir\n a=rtcp-fb:100 nack\n a=rtcp-fb:100 nack pli\n a=rtcp-fb:100 goog-remb\n a=rtcp-fb:100 transport-cc\n! \"a=\" are attributes associated with each payload type number\n! this tells us that 101 is the payload type number to remove\n-a=rtpmap:101 VP9/90000\n-a=rtcp-fb:101 ccm fir\n-a=rtcp-fb:101 nack\n-a=rtcp-fb:101 nack pli\n-a=rtcp-fb:101 goog-remb\n-a=rtcp-fb:101 transport-cc\n a=rtpmap:107 H264/90000\n a=rtcp-fb:107 ccm fir\n a=rtcp-fb:107 nack\n a=rtcp-fb:107 nack pli\n a=rtcp-fb:107 goog-remb\n a=rtcp-fb:107 transport-cc\n a=fmtp:107 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42e01f\n a=rtpmap:116 red/90000\n a=rtpmap:117 ulpfec/90000\n a=rtpmap:96 rtx/90000\n a=fmtp:96 apt=100\n a=rtpmap:97 rtx/90000\n! \"a=fmtp\" attribute is described in RFC4588\n! In short, apt=101 referes to previous VP9 payload type.\n! We are changing it to 100 (VP8 payload) here.\n-a=fmtp:97 apt=101\n+a=fmtp:97 apt=100\n a=rtpmap:99 rtx/90000\n a=fmtp:99 apt=107\n a=rtpmap:98 rtx/90000\n a=fmtp:98 apt=116\n a=ssrc-group:FID 1412078074 1853322751\n a=ssrc:1412078074 cname:/nX1r0P1oSOr0ktw\n a=ssrc:1412078074 msid:NFf4pxQvqNFomEdHC0fI1kwlxx5O9NbeAUUs 8d3831fd-53dd-464a-8a24-0b21f2465e3d\n a=ssrc:1412078074 mslabel:NFf4pxQvqNFomEdHC0fI1kwlxx5O9NbeAUUs\n a=ssrc:1412078074 label:8d3831fd-53dd-464a-8a24-0b21f2465e3d\n a=ssrc:1853322751 cname:/nX1r0P1oSOr0ktw\n a=ssrc:1853322751 msid:NFf4pxQvqNFomEdHC0fI1kwlxx5O9NbeAUUs 8d3831fd-53dd-464a-8a24-0b21f2465e3d\n a=ssrc:1853322751 mslabel:NFf4pxQvqNFomEdHC0fI1kwlxx5O9NbeAUUs\n a=ssrc:1853322751 label:8d3831fd-53dd-464a-8a24-0b21f2465e3d\n m=application 9 DTLS/SCTP 5000\n c=IN IP4 0.0.0.0\n a=ice-ufrag:VoeE\n a=ice-pwd:ZMrKM1piGvOdgZxVOOLlMOMq\n a=fingerprint:sha-256 00:3A:44:D4:B6:9D:8D:88:87:84:F8:18:29:8F:64:E8:AE:59:3E:D6:33:6C:74:88:4D:F8:88:1C:0E:C6:48:F9\n a=setup:actpass\n a=mid:data\n a=sctpmap:5000 webrtc-datachannel 1024\n```\n\nAlso note that if you split SDP string into lines, they should be joined with `\\r\\n`.\nThis is stated in [RFC4566: SDP](https://tools.ietf.org/html/rfc4566) (`The sequence CRLF (0x0d0a) is used to end a record, blah`). Missed it in my first try.\n\nWe decided to use VP8 because it should almost be available.\n[Android Compatibility Definition Document](https://source.android.com/compatibility/android-cdd.html#5_1_3_video_codecs)\nsays that all devices with Android `>= 4.3` is _required_ to have VP8 encoder.\n\n### Caveats / TBD\n\nEditing SDP worked for me, but this is far from a perfect fix. To name a few:\n\n- VP9 is stated to save 30% of bandwidth than VP8 ([src](https://developers.google.com/web/updates/2016/01/vp9-webrtc)).\n- I did not find a way to detect hardware encoding capability in mobile browser (any browser actually). The best workaround I could think of is to apply this hack to _all_ Android Chrome versions.\n\n### Reference\n\n- [SoCs Supporting VP8/VP9](http://wiki.webmproject.org/hardware/socs)\n- [RFC4566 / SDP](https://tools.ietf.org/html/rfc4566)\n- [RFC4588 / RTP Retransmission Payload Format](https://tools.ietf.org/html/rfc4588)\n"},"__N_SSG":true}