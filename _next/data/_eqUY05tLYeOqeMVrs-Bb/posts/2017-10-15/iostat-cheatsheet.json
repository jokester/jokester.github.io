{"pageProps":{"mdMeta":{"realpath":"/home/runner/work/jokester.github.io/jokester.github.io/posts/2017/2017-10-05-iostat-cheatsheet.md","slug":["2017-10-15","iostat-cheatsheet"],"frontMatter":{"title":"iostat cheatsheet","publishAt":"2017-10-15"}},"mdContent":"\nA cheatsheet of `iostat` in Linux. Mostly learned from [Interpreting iostat Output](https://blog.serverfault.com/2010/07/06/777852755/)\n\nBackground:\n\n- iostat reports at physics device/sector level (i.e. beneath cache and IO scheduling)\n\nOverall utilization:\n\n- `avg-cpu / %iowait`: how busy is the CPU, or \"amount of computation waiting for IO\"\n- `device / %util`: how busy is the device\n\nColumns (listed per device):\n\n- `rrqm/s  wrqm/s`: r/w requests merged per second\n    - *Block IO subsystem* may merge physically adjacent requests\n- `r/s  w/s`: number of (possibly merged) r/w requests\n- `rsec/s  wsec/s`: number of sectors read/written\n    - iostat can also be set to use units `rkB/s  wkB/s  rMB/s  wMB/s`\n- `avgrq-sz`: average size of request, in #sectors\n    - larger size indicates sequential IO, smaller indicates random IO\n- `avgqu-sz`: average length of request queue, i.e. average #request waiting to be served\n- `await`: average (wait + serve) time for a request, in ms\n    - `r_await / w_await`: the same time for r/w requests\n- `svctm`: average serve time for a request, in ms\n\nA monitor command with iostat:\n\n```bash\n# -x: extended report\n# -t: print time for report\n# -z: omit inactive devices\n# 1: report every 1 second\n\n$ iostat -xtz 1\n```\n\n"},"__N_SSG":true}