{"pageProps":{"mdMeta":{"realpath":"/home/runner/work/jokester.github.io/jokester.github.io/posts/2017/2017-03-15-type-for-nonnull-and-nonundefined.md","slug":["2017-03-15","type-for-nonnull-and-nonundefined"],"frontMatter":{"title":"Type for non-null and non-undefined in TypeScript","publishAt":"2017-03-15"}},"mdContent":"\nTypeScript's type computation does support `complement of type`, so we cannot simply define a type for `not-null`.\n\nThis is a workaround to create a type for `non-null and non-undefined`:\n\n(in short, we compute the wanted complement type by hand)\n\n- Use TypeScript 2.2 which introduced [`object`](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html#object-type) type.\n- Set `\"strictNullChecks\": true` in `tsconfig.json` to separate `null` / `undefined` and other types.\n\nWe can then express the complement set of type `null | undefined` with `number | string | boolean | symbol | object`.\n"},"__N_SSG":true}