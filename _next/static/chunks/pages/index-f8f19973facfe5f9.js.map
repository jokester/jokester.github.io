{"version":3,"file":"static/chunks/pages/index-f8f19973facfe5f9.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./pages/index.tsx","webpack://_N_E/./src/components/layout/header.tsx","webpack://_N_E/./src/components/external/tracking-tags.tsx","webpack://_N_E/./src/components/layout/layout.tsx","webpack://_N_E/./src/components/meta/html-meta.tsx","webpack://_N_E/./src/config/build-env.ts","webpack://_N_E/./src/config/const.ts","webpack://_N_E/./src/config/routes.ts","webpack://_N_E/./src/utils/debug-logger.ts","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import React from 'react';\nimport { Layout } from '../src/components/layout/layout';\nimport { HtmlMeta } from '../src/components/meta/html-meta';\nimport { SiteMeta } from '../src/config/const';\n\nconst IndexPage: React.FC = (props) => {\n  return (\n    <Layout>\n      <HtmlMeta title={SiteMeta.siteTitle} />\n      <div>{SiteMeta.siteDesc}</div>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","import React, { PropsWithChildren } from 'react';\nimport classNames from 'classnames';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { TypedRoutes } from '../../config/routes';\nimport { SiteMeta } from '../../config/const';\n\nconst SectionLink: React.FC<PropsWithChildren<{ path: string; className?: string }>> = (props) => {\n  const { pathname } = useRouter();\n  return (\n    <Link href={props.path}>\n      <a\n        className={classNames(props.className ?? '', {\n          ['text-yellow-200']: props.path !== TypedRoutes.index && pathname.startsWith(props.path),\n        })}\n      >\n        {props.children}\n      </a>\n    </Link>\n  );\n};\n\nexport const Header: React.FC = () => {\n  return (\n    <div className=\"px-4 py-1 flex items-center bg-gray-900 space-x-4 text-sm\">\n      <SectionLink className=\"sm:hidden text-lg\" path={TypedRoutes.index}>\n        {SiteMeta.siteTitleShort}\n      </SectionLink>\n      <SectionLink className=\"hidden sm:inline-block text-lg\" path={TypedRoutes.index}>\n        {SiteMeta.siteTitle}\n      </SectionLink>\n      <span>|</span>\n      <SectionLink path={TypedRoutes.posts.index}>/posts</SectionLink>\n      <SectionLink path={TypedRoutes.works}>/works</SectionLink>\n      <SectionLink path={TypedRoutes.about.me}>/about</SectionLink>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { buildEnv } from '../../config/build-env';\nimport { createLogger } from '../../utils/debug-logger';\nimport Head from 'next/head';\n\nconst logger = createLogger(__filename);\n\ndeclare function gtag(...args: any[]): void;\n\n/**\n * taken from https://github.com/zeit/next.js/blob/canary/examples/with-google-analytics/pages/_document.js\n * @returns {any}\n * @constructor\n */\nexport const GoogleAnalyticsTag: React.FC = () => {\n  const { GA_TRACKING_ID } = buildEnv;\n  const router = useRouter();\n\n  useEffect(() => {\n    logger('GA_TRACKING_ID', GA_TRACKING_ID);\n    if (GA_TRACKING_ID) {\n      const url = router.asPath;\n      logger('RouteChangeComplete', url);\n      setTimeout(() => {\n        typeof gtag === 'function' &&\n          gtag('config', GA_TRACKING_ID, {\n            page_location: url,\n            page_title: document.title,\n          });\n      }, 0);\n    }\n  }, []);\n\n  return (\n    (GA_TRACKING_ID && (\n      <Head>\n        {/* Global Site Tag (gtag.js) - Google Analytics */}\n        <script async src={`https://www.googletagmanager.com/gtag/js?id=${GA_TRACKING_ID}`} />\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `\n            window.dataLayer = window.dataLayer || [];\n            function gtag(){dataLayer.push(arguments);}\n            gtag('js', new Date());\n            gtag('config', '${GA_TRACKING_ID}', {\n              page_path: window.location.pathname,\n            });\n          `,\n          }}\n        />\n      </Head>\n    )) ||\n    null\n  );\n};\n","import React, { PropsWithChildren, useEffect } from 'react';\nimport { Header } from './header';\nimport { GoogleAnalyticsTag } from '../external/tracking-tags';\n\nexport const Layout: React.FC<PropsWithChildren> = (props) => {\n  return (\n    <div className=\"bg-black text-yellow-100\">\n      <GoogleAnalyticsTag />\n      <div className=\"min-h-screen container mx-auto\">\n        <Header />\n        <div className=\"px-4 pt-6\">{props.children}</div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { SiteMeta } from '../../config/const';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { createLogger } from '../../utils/debug-logger';\n\nconst logger = createLogger(__filename);\nexport const HtmlMeta: React.FC<{ title: string }> = (props) => {\n  /**\n   * TODO: ogp / keywords / etc\n   */\n  const router = useRouter();\n\n  return (\n    <Head>\n      <title>{props.title}</title>\n      <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1,maximum-scale=1.5,minimum-scale=1\" />\n      <link rel=\"canonical\" href={`${SiteMeta.canonicalOrigin}${router.asPath}`} />\n    </Head>\n  );\n};\n","declare const process: {\n  env: {\n    SOME_CONSTANT: string;\n    NEXT_DEV: boolean;\n    GA_TRACKING_ID: string;\n  };\n};\n\nexport const inBrowser = typeof window !== 'undefined';\nexport const inServer = !inBrowser;\n\nexport const isDevBuild = !!process.env.NEXT_DEV;\n\nexport const buildEnv = {\n  SOME_CONSTANT: process.env.SOME_CONSTANT,\n  GA_TRACKING_ID: process.env.GA_TRACKING_ID || null,\n} as const;\n\nexport type BuildEnv = typeof buildEnv;\n","export const SiteMeta = {\n  canonicalOrigin: `https://jokester.github.io`,\n  siteTitle: `挖坑自動機 / Digging automaton`,\n  siteTitleShort: `挖坑自動機`,\n  siteDesc: 'Posts and works about Web, Android, Linux and stuff.',\n} as const;\n","import { ParsedUrlQuery } from 'querystring';\n\n/**\n * @note MUST have trailing slash\n */\nexport const TypedRoutes = {\n  index: '/',\n  posts: {\n    index: '/posts/',\n    show: (slug: string[]) => `/posts/${slug.join('/')}/`,\n  },\n  works: '/works/',\n  about: {\n    me: '/about/',\n  },\n} as const;\nexport type TypedRouteParam<RouteNode> = RouteNode extends (param: infer Param) => string\n  ? Param & ParsedUrlQuery\n  : never;\n","import debug from 'debug';\nconst repoRoot = __filename.replace(/src[\\\\/]utils[\\\\/].*$/i, '');\n\nexport function createLogger(srcFile: string) {\n  const tag = srcFile\n    .slice(repoRoot.length)\n    .replace(/^src[\\\\/]/i, '')\n    .replace(/[\\\\/]/g, ':');\n  // console.log('createLogger: root', [__dirname, __filename, repoRoot]);\n  // console.log('createLogger: tag', [srcFile, tag]);\n\n  return debug(tag);\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","props","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Layout","jsx","HtmlMeta","title","SiteMeta","div","SectionLink","pathname","useRouter","jsx_runtime","Link","href","path","a","className","classNames","_define_property","Z","TypedRoutes","startsWith","children","Header","span","logger","createLogger","GoogleAnalyticsTag","GA_TRACKING_ID","buildEnv","router","useEffect","url","asPath","setTimeout","gtag","page_location","page_title","document","Head","script","async","src","concat","dangerouslySetInnerHTML","__html","meta","httpEquiv","content","name","link","rel","isDevBuild","SOME_CONSTANT","process","env","canonicalOrigin","siteTitle","siteTitleShort","siteDesc","index","posts","show","slug","join","works","about","me","repoRoot","__filename","replace","srcFile","tag","slice","length","debug"],"sourceRoot":""}