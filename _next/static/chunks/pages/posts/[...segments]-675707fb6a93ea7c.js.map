{"version":3,"file":"static/chunks/pages/posts/[...segments]-675707fb6a93ea7c.js","mappings":"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","sources":["webpack://_N_E/?1f9c","webpack://_N_E/./pages/posts/[...segments].tsx","webpack://_N_E/./src/components/layout/header.tsx","webpack://_N_E/./src/config/build-env.ts","webpack://_N_E/./src/components/external/tracking-tags.tsx","webpack://_N_E/./src/components/layout/layout.tsx","webpack://_N_E/./src/components/markdown/markdown-article.tsx","webpack://_N_E/./src/components/meta/html-meta.tsx","webpack://_N_E/./src/config/const.ts","webpack://_N_E/./src/config/routes.ts","webpack://_N_E/./src/utils/debug-logger.ts","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/posts/[...segments]\",\n      function () {\n        return require(\"private-next-pages/posts/[...segments].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/posts/[...segments]\"])\n      });\n    }\n  ","import React from 'react';\nimport { GetStaticPaths, GetStaticProps } from 'next';\nimport { Layout } from '../../src/components/layout/layout';\nimport { loadPosts, readMarkdownContent } from '../../src/ssr/post-resolver';\nimport { HtmlMeta } from '../../src/components/meta/html-meta';\nimport { MarkdownArticle } from '../../src/components/markdown/markdown-article';\nimport { MarkdownMeta } from '../../src/ssr/post-parser';\n\ninterface RouteParams extends Record<string, string | string[]> {\n  segments: string[];\n}\n\ninterface PageProps {\n  mdMeta: MarkdownMeta;\n  mdContent: string;\n}\n\nconst PostsShowPage: React.FC<PageProps> = (props) => (\n  <Layout>\n    <HtmlMeta title={`${props.mdMeta.frontMatter.title}`} />\n    <MarkdownArticle meta={props.mdMeta} content={props.mdContent} />\n  </Layout>\n);\n\nexport const getStaticPaths: GetStaticPaths<RouteParams> = async () => {\n  const x = await loadPosts();\n  return {\n    paths: x.files.map((mdFile) => ({\n      params: {\n        segments: mdFile.pathSegments,\n      } as RouteParams,\n    })),\n    fallback: false,\n  };\n};\n\nexport const getStaticProps: GetStaticProps<PageProps> = async (ctx) => {\n  const query: RouteParams = ctx.params as any;\n  const parsedMarkdown = await readMarkdownContent(query.segments);\n  return {\n    props: {\n      mdMeta: parsedMarkdown.meta,\n      mdContent: parsedMarkdown.content,\n    },\n  };\n};\nexport default PostsShowPage;\n","import React, { PropsWithChildren } from 'react';\nimport classNames from 'classnames';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { TypedRoutes } from '../../config/routes';\nimport { bcss, SiteMeta } from '../../config/const';\n\nconst linkClass = bcss({});\n\nconst SectionLink: React.FC<PropsWithChildren<{ path: string; className?: string }>> = (props) => {\n  const { pathname } = useRouter();\n  return (\n    <Link\n      href={props.path}\n      className={classNames(props.className ?? '', {\n        ['text-yellow-200']: props.path !== TypedRoutes.index && pathname.startsWith(props.path),\n      })}\n    >\n      {props.children}\n    </Link>\n  );\n};\n\nexport const Header: React.FC = () => {\n  return (\n    <div className=\"px-2 sm:px-4 py-1 flex items-center bg-gray-900 space-x-3 text-sm\">\n      <SectionLink className=\"hidden text-lg\" path={TypedRoutes.index}>\n        {SiteMeta.siteTitleShorter}\n      </SectionLink>\n      <SectionLink className=\"inline-block sm:hidden text sm:text-lg\" path={TypedRoutes.index}>\n        {SiteMeta.siteTitleShort}\n      </SectionLink>\n      <SectionLink className=\"hidden sm:inline-block text-lg\" path={TypedRoutes.index}>\n        {SiteMeta.siteTitle}\n      </SectionLink>\n      <span>|</span>\n      <SectionLink path={TypedRoutes.posts.index}>/posts</SectionLink>\n      <SectionLink path=\"/demos\">/demos</SectionLink>\n      <SectionLink path=\"/works\">/works</SectionLink>\n      <SectionLink path={TypedRoutes.about.me}>/about</SectionLink>\n    </div>\n  );\n};\n","declare const process: {\n  env: {\n    SOME_CONSTANT: string;\n    NEXT_DEV: boolean;\n    GA_TRACKING_ID: string;\n  };\n};\n\nexport const inBrowser = typeof window !== 'undefined';\nexport const inServer = !inBrowser;\n\nexport const isDevBuild = !!process.env.NEXT_DEV;\n\nexport const buildEnv = {\n  SOME_CONSTANT: process.env.SOME_CONSTANT,\n  GA_TRACKING_ID: process.env.GA_TRACKING_ID || null,\n} as const;\n\nexport type BuildEnv = typeof buildEnv;\n","import React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { buildEnv } from '../../config/build-env';\nimport { createLogger } from '../../utils/debug-logger';\nimport Head from 'next/head';\n\nconst logger = createLogger(__filename);\n\ndeclare function gtag(...args: any[]): void;\n\n/**\n * taken from https://github.com/zeit/next.js/blob/canary/examples/with-google-analytics/pages/_document.js\n * @returns {any}\n * @constructor\n */\nexport const GoogleAnalyticsTag: React.FC = () => {\n  const { GA_TRACKING_ID } = buildEnv;\n  const router = useRouter();\n\n  useEffect(() => {\n    logger('GA_TRACKING_ID', GA_TRACKING_ID);\n    if (GA_TRACKING_ID) {\n      const url = router.asPath;\n      logger('RouteChangeComplete', url);\n      setTimeout(() => {\n        typeof gtag === 'function' &&\n          gtag('config', GA_TRACKING_ID, {\n            page_location: url,\n            page_title: document.title,\n          });\n      }, 0);\n    }\n  }, []);\n\n  return (\n    (GA_TRACKING_ID && (\n      <Head>\n        {/* Global Site Tag (gtag.js) - Google Analytics */}\n        <script async src={`https://www.googletagmanager.com/gtag/js?id=${GA_TRACKING_ID}`} />\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `\n            window.dataLayer = window.dataLayer || [];\n            function gtag(){dataLayer.push(arguments);}\n            gtag('js', new Date());\n            gtag('config', '${GA_TRACKING_ID}', {\n              page_path: window.location.pathname,\n            });\n          `,\n          }}\n        />\n      </Head>\n    )) ||\n    null\n  );\n};\n","import React, { PropsWithChildren, useEffect } from 'react';\nimport { Header } from './header';\nimport { GoogleAnalyticsTag } from '../external/tracking-tags';\n\ninterface LayoutProps {}\n\nexport const Layout: React.FC<PropsWithChildren<LayoutProps>> = (props) => {\n  return (\n    <div className=\"bg-black text-yellow-100\">\n      <GoogleAnalyticsTag />\n      <Header />\n      <div className=\"min-h-screen container mx-auto\">\n        <div className=\"px-4 pt-6\">{props.children}</div>\n      </div>\n    </div>\n  );\n};\n","import ReactMarkdown from 'react-markdown';\nimport React from 'react';\nimport { Prism } from 'react-syntax-highlighter';\nimport codeStyle from 'react-syntax-highlighter/dist/cjs/styles/prism/atom-dark';\nimport { MarkdownMeta } from '../../ssr/post-parser';\nimport { inServer } from '../../config/build-env';\nimport remarkGfm from 'remark-gfm';\nimport { dark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nexport const MarkdownArticle: React.FC<{ title?: string; meta?: MarkdownMeta; content: string }> = ({\n  meta,\n  title,\n  content,\n}) => {\n  return (\n    <div className=\"markdown\" lang={meta?.frontMatter?.lang}>\n      <h1>{title ?? meta?.frontMatter?.lang ?? ''}</h1>\n      <hr />\n      <ReactMarkdown className=\"markdown\" remarkPlugins={[remarkGfm]}>\n        {content}\n      </ReactMarkdown>\n    </div>\n  );\n};\n","import React from 'react';\nimport { SiteMeta } from '../../config/const';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { createLogger } from '../../utils/debug-logger';\n\nconst logger = createLogger(__filename);\nexport const HtmlMeta: React.FC<{ title: string }> = (props) => {\n  /**\n   * TODO: ogp / keywords / etc\n   */\n  const router = useRouter();\n\n  return (\n    <Head>\n      <title>{props.title}</title>\n      <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1,maximum-scale=1.5,minimum-scale=1\" />\n      <link rel=\"canonical\" href={`${SiteMeta.canonicalOrigin}${router.asPath}`} />\n    </Head>\n  );\n};\n","import { css, CSSObject } from '@emotion/react';\n\nexport const SiteMeta = {\n  canonicalOrigin: `https://jokester.github.io`,\n  siteTitle: `挖坑自動機 / Digging automaton`,\n  siteTitleShort: `挖坑自動機`,\n  siteTitleShorter: `挖`,\n  siteDesc: 'Posts and works about Web, Android, Linux and stuff.',\n} as const;\n\nconst breakpoints = [360, 640, 768, 1024, 1280];\n\nconst mq = breakpoints.map((bp) => `@media (min-width: ${bp}px)`);\n\nexport function bcss(_default: CSSObject, ...objects: Array<CSSObject>): CSSObject {\n  const built = { ..._default };\n  for (let i = 0; i < mq.length; i++) {\n    built[mq[i]] = objects[i];\n  }\n\n  return built;\n}\n","import { ParsedUrlQuery } from 'querystring';\n\n/**\n * @note MUST have trailing slash\n */\nexport const TypedRoutes = {\n  index: '/',\n  posts: {\n    index: '/posts/',\n    show: (pathSegments: string[]) => `/posts/${pathSegments.join('/')}/`,\n  },\n  works: '/works/',\n  about: {\n    me: '/about/',\n  },\n} as const;\nexport type TypedRouteParam<RouteNode> = RouteNode extends (param: infer Param) => string\n  ? Param & ParsedUrlQuery\n  : never;\n","import debug from 'debug';\nconst repoRoot = __filename.replace(/src[\\\\/]utils[\\\\/].*$/i, '');\n\nexport function createLogger(srcFile: string): debug.IDebugger {\n  const tag = srcFile\n    .slice(repoRoot.length)\n    .replace(/^src[\\\\/]/i, '')\n    .replace(/[\\\\/]/g, ':');\n  // console.log('createLogger: root', [__dirname, __filename, repoRoot]);\n  // console.log('createLogger: tag', [srcFile, tag]);\n\n  return debug(tag);\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","props","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Layout","jsx","HtmlMeta","title","concat","mdMeta","frontMatter","MarkdownArticle","meta","content","mdContent","bcss","SectionLink","pathname","useRouter","jsx_runtime","Link","href","path","className","classNames","_define_property","Z","TypedRoutes","startsWith","children","Header","div","SiteMeta","span","buildEnv","SOME_CONSTANT","process","env","GA_TRACKING_ID","logger","createLogger","GoogleAnalyticsTag","router","useEffect","url","asPath","setTimeout","gtag","page_location","page_title","document","Head","script","async","src","dangerouslySetInnerHTML","__html","param","lang","h1","hr","ReactMarkdown","remarkPlugins","remarkGfm","httpEquiv","name","link","rel","canonicalOrigin","siteTitle","siteTitleShort","siteTitleShorter","siteDesc","mq","breakpoints","map","bp","_default","_len","arguments","length","objects","_key","built","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_0__","i","index","posts","show","pathSegments","join","works","about","me","repoRoot","__filename","replace","srcFile","tag","slice","debug"],"sourceRoot":""}